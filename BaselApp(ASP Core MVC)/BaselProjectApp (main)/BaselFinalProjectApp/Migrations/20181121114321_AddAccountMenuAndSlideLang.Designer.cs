// <auto-generated />
using System;
using BaselFinalProjectApp.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BaselFinalProjectApp.Migrations
{
    [DbContext(typeof(BaselDbContext))]
    [Migration("20181121114321_AddAccountMenuAndSlideLang")]
    partial class AddAccountMenuAndSlideLang
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.1-rtm-30846")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("BaselFinalProjectApp.Models.MainModel.AppUser", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AccessFailedCount");

                    b.Property<int?>("CartId");

                    b.Property<int?>("CompareListId");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken();

                    b.Property<string>("Email")
                        .HasMaxLength(256);

                    b.Property<bool>("EmailConfirmed");

                    b.Property<bool>("IsActivate");

                    b.Property<string>("Lastname");

                    b.Property<bool>("LockoutEnabled");

                    b.Property<DateTimeOffset?>("LockoutEnd");

                    b.Property<string>("Name");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256);

                    b.Property<string>("PasswordHash");

                    b.Property<string>("PhoneNumber");

                    b.Property<bool>("PhoneNumberConfirmed");

                    b.Property<string>("SecurityStamp");

                    b.Property<bool>("TwoFactorEnabled");

                    b.Property<string>("UserName")
                        .HasMaxLength(256);

                    b.Property<int?>("WishListId");

                    b.HasKey("Id");

                    b.HasIndex("CartId")
                        .IsUnique()
                        .HasFilter("[CartId] IS NOT NULL");

                    b.HasIndex("CompareListId")
                        .IsUnique()
                        .HasFilter("[CompareListId] IS NOT NULL");

                    b.HasIndex("NormalizedEmail")
                        .HasName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.HasIndex("UserName")
                        .IsUnique()
                        .HasFilter("[UserName] IS NOT NULL");

                    b.HasIndex("WishListId")
                        .IsUnique()
                        .HasFilter("[WishListId] IS NOT NULL");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("BaselFinalProjectApp.Models.MainModel.BillingDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Company");

                    b.Property<string>("Country");

                    b.Property<string>("StreetAddress");

                    b.Property<string>("Town");

                    b.HasKey("Id");

                    b.ToTable("BillingDetails");
                });

            modelBuilder.Entity("BaselFinalProjectApp.Models.MainModel.Cart", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AppUserId");

                    b.Property<int>("Count");

                    b.HasKey("Id");

                    b.ToTable("Carts");
                });

            modelBuilder.Entity("BaselFinalProjectApp.Models.MainModel.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("BaselFinalProjectApp.Models.MainModel.Color", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Colors");
                });

            modelBuilder.Entity("BaselFinalProjectApp.Models.MainModel.CompareList", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AppUserId");

                    b.HasKey("Id");

                    b.ToTable("CompareLists");
                });

            modelBuilder.Entity("BaselFinalProjectApp.Models.MainModel.Image", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FileName");

                    b.Property<int>("ProductId");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("Images");
                });

            modelBuilder.Entity("BaselFinalProjectApp.Models.MainModel.Language", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Languages");
                });

            modelBuilder.Entity("BaselFinalProjectApp.Models.MainModel.Measure", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Age");

                    b.Property<string>("Chest");

                    b.Property<string>("Height");

                    b.Property<string>("Hip");

                    b.Property<int>("ProductId");

                    b.Property<string>("SKU");

                    b.Property<string>("Size");

                    b.Property<string>("Waist");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("Measures");
                });

            modelBuilder.Entity("BaselFinalProjectApp.Models.MainModel.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AppUserId");

                    b.Property<string>("AppUserId1");

                    b.Property<int>("BillingDetailId");

                    b.Property<int>("Count");

                    b.Property<DateTime>("Date");

                    b.Property<int>("Number");

                    b.Property<string>("Status");

                    b.Property<decimal>("Total");

                    b.HasKey("Id");

                    b.HasIndex("AppUserId1");

                    b.HasIndex("BillingDetailId")
                        .IsUnique();

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("BaselFinalProjectApp.Models.MainModel.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("About");

                    b.Property<string>("Benefit");

                    b.Property<int>("CategoryId");

                    b.Property<string>("Detail");

                    b.Property<bool>("IsActivated");

                    b.Property<string>("Name");

                    b.Property<decimal>("Price");

                    b.Property<int>("Stock");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("BaselFinalProjectApp.Models.MainModel.ProductCart", b =>
                {
                    b.Property<int>("CartId");

                    b.Property<int>("ProductId");

                    b.HasKey("CartId", "ProductId");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductCart");
                });

            modelBuilder.Entity("BaselFinalProjectApp.Models.MainModel.ProductColor", b =>
                {
                    b.Property<int>("ProductId");

                    b.Property<int>("ColorId");

                    b.HasKey("ProductId", "ColorId");

                    b.HasIndex("ColorId");

                    b.ToTable("ProductColor");
                });

            modelBuilder.Entity("BaselFinalProjectApp.Models.MainModel.ProductCompareList", b =>
                {
                    b.Property<int>("ProductId");

                    b.Property<int>("CompareListId");

                    b.HasKey("ProductId", "CompareListId");

                    b.HasIndex("CompareListId");

                    b.ToTable("ProductCompareList");
                });

            modelBuilder.Entity("BaselFinalProjectApp.Models.MainModel.ProductOrder", b =>
                {
                    b.Property<int>("ProductId");

                    b.Property<int>("OrderId");

                    b.HasKey("ProductId", "OrderId");

                    b.HasIndex("OrderId");

                    b.ToTable("ProductOrder");
                });

            modelBuilder.Entity("BaselFinalProjectApp.Models.MainModel.ProductWishList", b =>
                {
                    b.Property<int>("ProductId");

                    b.Property<int>("WishListId");

                    b.HasKey("ProductId", "WishListId");

                    b.HasIndex("WishListId");

                    b.ToTable("ProductWishList");
                });

            modelBuilder.Entity("BaselFinalProjectApp.Models.MainModel.Review", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AppUserId");

                    b.Property<string>("AppUserId1");

                    b.Property<string>("Comment");

                    b.Property<DateTime>("Date");

                    b.Property<int>("ProductId");

                    b.Property<byte>("Rating");

                    b.HasKey("Id");

                    b.HasIndex("AppUserId1");

                    b.HasIndex("ProductId");

                    b.ToTable("Reviews");
                });

            modelBuilder.Entity("BaselFinalProjectApp.Models.MainModel.SocialAccount", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AppUserId");

                    b.Property<string>("AppUserId1");

                    b.Property<string>("Name");

                    b.Property<string>("URL");

                    b.HasKey("Id");

                    b.HasIndex("AppUserId1");

                    b.ToTable("SocialAccounts");
                });

            modelBuilder.Entity("BaselFinalProjectApp.Models.MainModel.WishList", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AppUserId");

                    b.HasKey("Id");

                    b.ToTable("WishLists");
                });

            modelBuilder.Entity("BaselFinalProjectApp.Models.PageModel.AccountPageModel.AccountMenu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Action");

                    b.Property<string>("Controller");

                    b.Property<string>("Icon");

                    b.HasKey("Id");

                    b.ToTable("AccountMenus");
                });

            modelBuilder.Entity("BaselFinalProjectApp.Models.PageModel.AccountPageModel.AccountMenuLanguage", b =>
                {
                    b.Property<int>("LanguageId");

                    b.Property<int>("AccountMenuId");

                    b.Property<string>("Name");

                    b.HasKey("LanguageId", "AccountMenuId");

                    b.HasIndex("AccountMenuId");

                    b.ToTable("AccountMenuLanguage");
                });

            modelBuilder.Entity("BaselFinalProjectApp.Models.PageModel.AccountPageModel.ContactAbout", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description");

                    b.Property<string>("Footer");

                    b.Property<string>("Header");

                    b.Property<string>("Title");

                    b.HasKey("Id");

                    b.ToTable("ContactAbouts");
                });

            modelBuilder.Entity("BaselFinalProjectApp.Models.PageModel.AccountPageModel.ContactUs", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description");

                    b.Property<string>("Footer");

                    b.Property<string>("Header");

                    b.Property<string>("Icon");

                    b.Property<string>("Title");

                    b.HasKey("Id");

                    b.ToTable("ContactUs");
                });

            modelBuilder.Entity("BaselFinalProjectApp.Models.PageModel.HomePageModel.AddtionalMenu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Action");

                    b.Property<string>("Controller");

                    b.Property<string>("Icon");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("AddtionalMenus");
                });

            modelBuilder.Entity("BaselFinalProjectApp.Models.PageModel.HomePageModel.CompanyLogo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Image");

                    b.HasKey("Id");

                    b.ToTable("CompanyLogos");
                });

            modelBuilder.Entity("BaselFinalProjectApp.Models.PageModel.HomePageModel.FeaturedCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description");

                    b.Property<string>("Footer");

                    b.Property<string>("Header");

                    b.Property<string>("Title");

                    b.HasKey("Id");

                    b.ToTable("FeaturedCategories");
                });

            modelBuilder.Entity("BaselFinalProjectApp.Models.PageModel.HomePageModel.FeaturedProduct", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description");

                    b.Property<string>("Footer");

                    b.Property<string>("Header");

                    b.Property<string>("Title");

                    b.HasKey("Id");

                    b.ToTable("FeaturedProducts");
                });

            modelBuilder.Entity("BaselFinalProjectApp.Models.PageModel.HomePageModel.HeadMenu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Action");

                    b.Property<string>("Controller");

                    b.HasKey("Id");

                    b.ToTable("HeadMenus");
                });

            modelBuilder.Entity("BaselFinalProjectApp.Models.PageModel.HomePageModel.HeadMenuLanguage", b =>
                {
                    b.Property<int>("LanguageId");

                    b.Property<int>("HeadMenuId");

                    b.Property<string>("Name");

                    b.HasKey("LanguageId", "HeadMenuId");

                    b.HasIndex("HeadMenuId");

                    b.ToTable("HeadMenuLanguage");
                });

            modelBuilder.Entity("BaselFinalProjectApp.Models.PageModel.HomePageModel.HomeConnect", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description");

                    b.Property<string>("Footer");

                    b.Property<string>("Header");

                    b.Property<string>("Title");

                    b.HasKey("Id");

                    b.ToTable("HomeConnects");
                });

            modelBuilder.Entity("BaselFinalProjectApp.Models.PageModel.HomePageModel.HomeSocialAccount", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Image");

                    b.HasKey("Id");

                    b.ToTable("HomeSocialAccounts");
                });

            modelBuilder.Entity("BaselFinalProjectApp.Models.PageModel.HomePageModel.LatesNews", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Author");

                    b.Property<DateTime>("Date");

                    b.Property<string>("Description");

                    b.Property<string>("Footer");

                    b.Property<string>("Header");

                    b.Property<string>("Image");

                    b.Property<string>("Title");

                    b.HasKey("Id");

                    b.ToTable("LatesNews");
                });

            modelBuilder.Entity("BaselFinalProjectApp.Models.PageModel.HomePageModel.Menu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Action");

                    b.Property<string>("Controller");

                    b.HasKey("Id");

                    b.ToTable("Menus");
                });

            modelBuilder.Entity("BaselFinalProjectApp.Models.PageModel.HomePageModel.MenuLanguage", b =>
                {
                    b.Property<int>("LanguageId");

                    b.Property<int>("MenuId");

                    b.Property<string>("Name");

                    b.HasKey("LanguageId", "MenuId");

                    b.HasIndex("MenuId");

                    b.ToTable("MenuLanguage");
                });

            modelBuilder.Entity("BaselFinalProjectApp.Models.PageModel.HomePageModel.NotFound", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description");

                    b.Property<string>("Footer");

                    b.Property<string>("Header");

                    b.Property<string>("Title");

                    b.HasKey("Id");

                    b.ToTable("NotFounds");
                });

            modelBuilder.Entity("BaselFinalProjectApp.Models.PageModel.HomePageModel.PageAbout", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BackGroundImage");

                    b.Property<string>("Description");

                    b.Property<string>("Footer");

                    b.Property<string>("Header");

                    b.Property<string>("Title");

                    b.HasKey("Id");

                    b.ToTable("PageAbouts");
                });

            modelBuilder.Entity("BaselFinalProjectApp.Models.PageModel.HomePageModel.PageLogo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Image");

                    b.HasKey("Id");

                    b.ToTable("PageLogos");
                });

            modelBuilder.Entity("BaselFinalProjectApp.Models.PageModel.HomePageModel.PageSocialAccount", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Action");

                    b.Property<string>("BackgroundColor");

                    b.Property<string>("Controller");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("PageSocialAccounts");
                });

            modelBuilder.Entity("BaselFinalProjectApp.Models.PageModel.HomePageModel.PersonAbout", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Author");

                    b.Property<string>("Description");

                    b.Property<string>("Image");

                    b.Property<string>("Work");

                    b.HasKey("Id");

                    b.ToTable("PersonAbouts");
                });

            modelBuilder.Entity("BaselFinalProjectApp.Models.PageModel.HomePageModel.Slide", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.HasKey("Id");

                    b.ToTable("Slides");
                });

            modelBuilder.Entity("BaselFinalProjectApp.Models.PageModel.HomePageModel.SlideLanguage", b =>
                {
                    b.Property<int>("LanguageId");

                    b.Property<int>("SlideId");

                    b.Property<string>("Description");

                    b.Property<string>("Footer");

                    b.Property<string>("Header");

                    b.Property<string>("Image");

                    b.Property<string>("Title");

                    b.HasKey("LanguageId", "SlideId");

                    b.HasIndex("SlideId");

                    b.ToTable("SlideLanguage");
                });

            modelBuilder.Entity("BaselFinalProjectApp.Models.PageModel.HomePageModel.SubMenu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Action");

                    b.Property<string>("Controller");

                    b.Property<int>("MenuId");

                    b.HasKey("Id");

                    b.HasIndex("MenuId");

                    b.ToTable("SubMenus");
                });

            modelBuilder.Entity("BaselFinalProjectApp.Models.PageModel.HomePageModel.SubMenuLanguage", b =>
                {
                    b.Property<int>("LanguageId");

                    b.Property<int>("SubMenuId");

                    b.Property<string>("Name");

                    b.HasKey("LanguageId", "SubMenuId");

                    b.HasIndex("SubMenuId");

                    b.ToTable("SubMenuLanguage");
                });

            modelBuilder.Entity("BaselFinalProjectApp.Models.PageModel.ShopPageModel.FilterColor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Action");

                    b.Property<string>("Color");

                    b.Property<string>("Controller");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("FilterColors");
                });

            modelBuilder.Entity("BaselFinalProjectApp.Models.PageModel.ShopPageModel.FilterPrice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Action");

                    b.Property<string>("Controller");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("FilterPrices");
                });

            modelBuilder.Entity("BaselFinalProjectApp.Models.PageModel.ShopPageModel.FilterSize", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Action");

                    b.Property<string>("Controller");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("FilterSizes");
                });

            modelBuilder.Entity("BaselFinalProjectApp.Models.PageModel.ShopPageModel.FilterSortBy", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Action");

                    b.Property<string>("Controller");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("FilterSortBies");
                });

            modelBuilder.Entity("BaselFinalProjectApp.Models.PageModel.ShopPageModel.ShopMenu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Action");

                    b.Property<string>("Controller");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("ShopMenus");
                });

            modelBuilder.Entity("BaselFinalProjectApp.Models.PageModel.ShopPageModel.ShoppingDelivery", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description");

                    b.Property<string>("Footer");

                    b.Property<string>("Header");

                    b.Property<string>("Image");

                    b.Property<string>("Title");

                    b.HasKey("Id");

                    b.ToTable("ShoppingDeliveries");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken();

                    b.Property<string>("Name")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType");

                    b.Property<string>("ClaimValue");

                    b.Property<string>("RoleId")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType");

                    b.Property<string>("ClaimValue");

                    b.Property<string>("UserId")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider");

                    b.Property<string>("ProviderKey");

                    b.Property<string>("ProviderDisplayName");

                    b.Property<string>("UserId")
                        .IsRequired();

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId");

                    b.Property<string>("RoleId");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId");

                    b.Property<string>("LoginProvider");

                    b.Property<string>("Name");

                    b.Property<string>("Value");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("BaselFinalProjectApp.Models.MainModel.AppUser", b =>
                {
                    b.HasOne("BaselFinalProjectApp.Models.MainModel.Cart", "Cart")
                        .WithOne("AppUser")
                        .HasForeignKey("BaselFinalProjectApp.Models.MainModel.AppUser", "CartId");

                    b.HasOne("BaselFinalProjectApp.Models.MainModel.CompareList", "CompareList")
                        .WithOne("AppUser")
                        .HasForeignKey("BaselFinalProjectApp.Models.MainModel.AppUser", "CompareListId");

                    b.HasOne("BaselFinalProjectApp.Models.MainModel.WishList", "WishList")
                        .WithOne("AppUser")
                        .HasForeignKey("BaselFinalProjectApp.Models.MainModel.AppUser", "WishListId");
                });

            modelBuilder.Entity("BaselFinalProjectApp.Models.MainModel.Image", b =>
                {
                    b.HasOne("BaselFinalProjectApp.Models.MainModel.Product", "Product")
                        .WithMany("Images")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("BaselFinalProjectApp.Models.MainModel.Measure", b =>
                {
                    b.HasOne("BaselFinalProjectApp.Models.MainModel.Product", "Product")
                        .WithMany("Measures")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("BaselFinalProjectApp.Models.MainModel.Order", b =>
                {
                    b.HasOne("BaselFinalProjectApp.Models.MainModel.AppUser", "AppUser")
                        .WithMany("Orders")
                        .HasForeignKey("AppUserId1");

                    b.HasOne("BaselFinalProjectApp.Models.MainModel.BillingDetail", "BillingDetail")
                        .WithOne("Order")
                        .HasForeignKey("BaselFinalProjectApp.Models.MainModel.Order", "BillingDetailId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("BaselFinalProjectApp.Models.MainModel.Product", b =>
                {
                    b.HasOne("BaselFinalProjectApp.Models.MainModel.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("BaselFinalProjectApp.Models.MainModel.ProductCart", b =>
                {
                    b.HasOne("BaselFinalProjectApp.Models.MainModel.Cart", "Cart")
                        .WithMany("ProductCarts")
                        .HasForeignKey("CartId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("BaselFinalProjectApp.Models.MainModel.Product", "Product")
                        .WithMany("ProductCarts")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("BaselFinalProjectApp.Models.MainModel.ProductColor", b =>
                {
                    b.HasOne("BaselFinalProjectApp.Models.MainModel.Color", "Color")
                        .WithMany("ProductColors")
                        .HasForeignKey("ColorId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("BaselFinalProjectApp.Models.MainModel.Product", "Product")
                        .WithMany("ProductColors")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("BaselFinalProjectApp.Models.MainModel.ProductCompareList", b =>
                {
                    b.HasOne("BaselFinalProjectApp.Models.MainModel.CompareList", "CompareList")
                        .WithMany("ProductCompareLists")
                        .HasForeignKey("CompareListId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("BaselFinalProjectApp.Models.MainModel.Product", "Product")
                        .WithMany("ProductCompareLists")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("BaselFinalProjectApp.Models.MainModel.ProductOrder", b =>
                {
                    b.HasOne("BaselFinalProjectApp.Models.MainModel.Order", "Order")
                        .WithMany("ProductOrders")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("BaselFinalProjectApp.Models.MainModel.Product", "Product")
                        .WithMany("ProductOrders")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("BaselFinalProjectApp.Models.MainModel.ProductWishList", b =>
                {
                    b.HasOne("BaselFinalProjectApp.Models.MainModel.Product", "Product")
                        .WithMany("ProductWishLists")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("BaselFinalProjectApp.Models.MainModel.WishList", "WishList")
                        .WithMany("ProductWishLists")
                        .HasForeignKey("WishListId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("BaselFinalProjectApp.Models.MainModel.Review", b =>
                {
                    b.HasOne("BaselFinalProjectApp.Models.MainModel.AppUser", "AppUser")
                        .WithMany("Reviews")
                        .HasForeignKey("AppUserId1");

                    b.HasOne("BaselFinalProjectApp.Models.MainModel.Product", "Product")
                        .WithMany("Reviews")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("BaselFinalProjectApp.Models.MainModel.SocialAccount", b =>
                {
                    b.HasOne("BaselFinalProjectApp.Models.MainModel.AppUser", "AppUser")
                        .WithMany("SocialAccounts")
                        .HasForeignKey("AppUserId1");
                });

            modelBuilder.Entity("BaselFinalProjectApp.Models.PageModel.AccountPageModel.AccountMenuLanguage", b =>
                {
                    b.HasOne("BaselFinalProjectApp.Models.PageModel.AccountPageModel.AccountMenu", "AccountMenu")
                        .WithMany("AccountMenuLanguages")
                        .HasForeignKey("AccountMenuId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("BaselFinalProjectApp.Models.MainModel.Language", "Language")
                        .WithMany("AccountMenuLanguages")
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("BaselFinalProjectApp.Models.PageModel.HomePageModel.HeadMenuLanguage", b =>
                {
                    b.HasOne("BaselFinalProjectApp.Models.PageModel.HomePageModel.HeadMenu", "HeadMenu")
                        .WithMany("HeadMenuLanguages")
                        .HasForeignKey("HeadMenuId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("BaselFinalProjectApp.Models.MainModel.Language", "Language")
                        .WithMany("HeadMenuLanguages")
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("BaselFinalProjectApp.Models.PageModel.HomePageModel.MenuLanguage", b =>
                {
                    b.HasOne("BaselFinalProjectApp.Models.MainModel.Language", "Language")
                        .WithMany("MenuLanguages")
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("BaselFinalProjectApp.Models.PageModel.HomePageModel.Menu", "Menu")
                        .WithMany("MenuLanguages")
                        .HasForeignKey("MenuId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("BaselFinalProjectApp.Models.PageModel.HomePageModel.SlideLanguage", b =>
                {
                    b.HasOne("BaselFinalProjectApp.Models.MainModel.Language", "Language")
                        .WithMany("SlideLanguages")
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("BaselFinalProjectApp.Models.PageModel.HomePageModel.Slide", "Slide")
                        .WithMany("SlideLanguages")
                        .HasForeignKey("SlideId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("BaselFinalProjectApp.Models.PageModel.HomePageModel.SubMenu", b =>
                {
                    b.HasOne("BaselFinalProjectApp.Models.PageModel.HomePageModel.Menu", "Menu")
                        .WithMany("SubMenus")
                        .HasForeignKey("MenuId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("BaselFinalProjectApp.Models.PageModel.HomePageModel.SubMenuLanguage", b =>
                {
                    b.HasOne("BaselFinalProjectApp.Models.MainModel.Language", "Language")
                        .WithMany("SubMenuLanguages")
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("BaselFinalProjectApp.Models.PageModel.HomePageModel.SubMenu", "SubMenu")
                        .WithMany("SubMenuLanguages")
                        .HasForeignKey("SubMenuId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("BaselFinalProjectApp.Models.MainModel.AppUser")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("BaselFinalProjectApp.Models.MainModel.AppUser")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("BaselFinalProjectApp.Models.MainModel.AppUser")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("BaselFinalProjectApp.Models.MainModel.AppUser")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
